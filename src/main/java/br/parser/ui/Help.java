package br.parser.ui;

import javafx.scene.Node;
import javafx.scene.control.Tab;
import javafx.scene.control.TextArea;
import javafx.scene.layout.VBox;

public class Help extends Tab{

	public Help(String text, Node graphic) {


		this.setText(text);
		this.setGraphic(graphic);
		this.init();
	}

	public void init() {
		
		TextArea right = new TextArea("Configuration Tab: \n"
				+ "===========\n"
				+ "System Name: Name of the system (new or update).\n"
				+ "---------------------\n"
				+ "Repo Systems: Directory where the generated files will be stored \n"
				+ "for the selected system.\n"
				+ "---------------------\n"
				+ "Source: Txt file with the source path of the system. You could \n"
				+ "include more than one source path (one for each line of the txt file).\n"
				+ "---------------------\n"
				+ "Jar Libraries: Txt file with the jar library path used by the system. \n"
				+ "You could include more than one jar library path (one for each line).\n "
				+ "---------------------\n"
				+ "Xml File: Xml File generated by visualvm application for runtime \n"
				+ "analysis.\n"
				+ "\n"
				+ "Analysis Tab: \n"
				+ "=========\n"
				+ "System Name: System to be analysed.\n"
				+ "---------------------\n"
				+ "Type of Representation (Static Analysis): Package calls or method calls.\n"
				+ "---------------------\n"
				+ "Type of Operation (Static Analysis): Show comparisons or variables \n"
				+ "or nothing for each class represented in the graph.\n"
				+ "---------------------\n"
				+ "Self-Node call (Static Analysis): Show calls of the same node.");
		
		right.setPrefRowCount(14);
		right.setMaxWidth(460);
		right.setEditable(false);
		this.setClosable(false);
		
		VBox vbox = new VBox(right);
		this.setContent(vbox);
	
	}
	
}
